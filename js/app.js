var page = 0;
var startTime = new Date().toUTCString();
var id = Math.floor(Math.random() * 10000);
var db = null;
var refEntry,
    refOverviewParticipantsCounter;

var dbEntryPath = 'survey-data-' + env + '/entries/entry-';
var dbOverviewPath = 'survey-data-' + env + '/overview/';

var resultObject,
    resultTotalCorrect,
    resultTotalAnswered;

function initDB()
{
  db = firebase.database();

  refEntry = db.ref(dbEntryPath + id);
  refOverviewParticipantsCounter = db.ref(dbOverviewPath + 'total/participants');
}

function initQuiz(){
  var currentPage = $("#page"+page);

  $('.page.load').removeClass('load');

  currentPage.addClass('show');

  page++;

  randomizeContent(page);
}

function updateEntries(sendObject){
  var updates = {};

  refEntry.update(sendObject) 
}

function changePage(page){
  var currentPage = $("#page"+page);

  $('.page.show').removeClass('show');

  currentPage.addClass('show');
}

function nextPage(button){
  var countParticipants;
  var currentPage = $("#page"+page);

  if (page == 1){
    refOverviewParticipantsCounter.transaction(function(countParticipants) {
      if (countParticipants == null) {
        return 1;
      } else {
        return countParticipants + 1;
      }
    })
  }

  collectAndSendInputs(page, button);

  changePage(page);

  page++;

  if($(currentPage).find(".page-results").length !== 0){
    console.log("test");

    db.ref(dbEntryPath + id + '/results/').once('value').then(function(snapshot){
      resultObject = snapshot.val();

      resultTotalAnswered = resultObject.total.answered;
      resultTotalCorrect = resultObject.total.correct;

      $("#correct").text(resultTotalCorrect);
      $("#answered").text(" / " + resultTotalAnswered);

      // $.map(resultObject, function(question){
      //   if ("id" in question){
      //     console.log(question.id);
      //   }
      // })
    });
  }

  randomizeContent(page);
}

function randomizeContent(page) {
  var randomContent = $('#page'+page+' .random');
  var chosenContent;

  for(var i = 0; i < randomContent.length; i++){
    var target = Math.floor(Math.random() * randomContent.length -1) + 1;
    var target2 = Math.floor(Math.random() * randomContent.length -1) +1;
    randomContent.eq(target).before(randomContent.eq(target2));
  }

  chosenContent = $('#page'+page+' .randomize > *:nth-child(2)');
  chosenContent.addClass("chosen");

  for(var i = 0; i < randomContent.length; i++){
    if(!$(randomContent[i]).hasClass("chosen")){
      randomContent[i].remove();
    }
  }
}

function collectAndSendInputs(page, button) {
  var buttonClicked = $(button);
  var answerPath = 'results/question-'
  var sendObject = {}
  var overviewQuestionObject = {};
  var currentPage = page-1;

  //Question
  $('#page'+currentPage+' .question').each(function(){
    var question = $(this);
    var content = $('#page'+currentPage+' .chosen');

    var dataQuestionId = question.attr("id");
    var dataContentId = content.attr("value");
    var dataContentType = question.attr("type");
    var dataResult = "no answer";
    var dataRalidity;

    //Validity
    if (dataQuestionId % 2 == 0){
      dataValidity = "Generated by AI";
    }else{
      dataValidity = "By Humans";
    }

    //Answer
    $('input', question).each(function(){
      var input = $(this);

      sendObject[answerPath + currentPage + '/' + input.attr("value")] = "false";

      if (input = buttonClicked){
        sendObject[answerPath + currentPage + '/' + input.attr("value")] = "true";

        if (buttonClicked.attr("value") == "selects-ai" && dataQuestionId % 2 == 0){
          dataResult = "correct";
        } else if (buttonClicked.attr("value") == "selects-human" && Math.abs(dataQuestionId % 2) == 1){
          dataResult = "correct";
        } else {
          dataResult = "wrong";
        }
      }
    })

    //Overview Counters
    var overviewTotalPath = 'total/';
    var overviewQuestionPath = 'per-question/question-' + dataQuestionId;
    var overviewContentPath = 'per-content/' + dataContentType + '-' + dataContentId;
    var overviewTypePath = 'per-content-type/' + dataContentType;

    db.ref(dbOverviewPath + overviewTotalPath + '/answers/answers').transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    db.ref(dbOverviewPath + overviewTotalPath + '/answers/' + dataResult).transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    db.ref(dbOverviewPath + overviewQuestionPath + '/answers').transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    db.ref(dbOverviewPath + overviewQuestionPath + '/' + dataResult).transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    db.ref(dbOverviewPath + overviewTypePath + '/answers').transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    db.ref(dbOverviewPath + overviewTypePath + '/' + dataResult).transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    db.ref(dbOverviewPath + overviewContentPath + '/answers').transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    db.ref(dbOverviewPath + overviewContentPath + '/' + dataResult).transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    //Construct Object
    sendObject["id"] = id
    sendObject["startTime"] = startTime
    sendObject["completeTime"] = new Date().toUTCString();

    sendObject[answerPath + currentPage + '/id'] = dataQuestionId;
    sendObject[answerPath + currentPage + '/content-id'] = dataContentId;
    sendObject[answerPath + currentPage + '/content-type'] = dataContentType;
    sendObject[answerPath + currentPage + '/validity'] = dataValidity;
    sendObject[answerPath + currentPage + '/result'] = dataResult;

    updateEntries(sendObject);

    //Counter
    db.ref(dbEntryPath + id + '/results/total/answered').transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });

    db.ref(dbEntryPath + id + '/results/total/' + dataResult).transaction(function(counter){
      if (counter == null) {
        return 1;
      } else {
        return counter + 1;
      }
    });
  })
}

function animateFavicon(){
  var favicon_images = [
      "assets/favicon-1.ico",
      "assets/favicon-2.ico"
  ],
  image_counter = 0;

  setInterval(function() {
    $("link[rel='icon']").remove();
    $("link[rel='shortcut icon']").remove();
    $("head").append('<link rel="icon" href="' + baseurl + favicon_images[image_counter] + '" type="image/x-icon">');
        
    if(image_counter == favicon_images.length -1)
      image_counter = 0;
    else
      image_counter++;
  }, 500);
}

function start()
{
  initDB();
  initQuiz();
  animateFavicon();
}